{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  canActivate() {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","auth","canActivate","isLoggedIn","i0","ɵɵinject","i1","AuthService","factory","ɵfac","providedIn"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\guard\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivateFn } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn : 'root'\n})\nexport class AuthGuard{\n  constructor(private auth : AuthService){}\n  canActivate():boolean{\n    if(this.auth.isLoggedIn()){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n}"],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAkB;IAAlB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EACxCC,WAAWA,CAAA;IACT,IAAG,IAAI,CAACD,IAAI,CAACE,UAAU,EAAE,EAAC;MACxB,OAAO,IAAI;KACZ,MACG;MACF,OAAO,KAAK;;EAEhB;;SATWJ,SAAS;;mBAATA,MAAS,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;SAATR,MAAS;EAAAS,OAAA,EAATT,MAAS,CAAAU,IAAA;EAAAC,UAAA,EAFP;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}