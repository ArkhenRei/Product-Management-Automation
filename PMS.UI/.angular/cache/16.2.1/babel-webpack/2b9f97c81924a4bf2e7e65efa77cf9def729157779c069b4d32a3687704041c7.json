{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateForm';\nexport let SignupComponent = class SignupComponent {\n  constructor(fb, auth, routeer) {\n    this.fb = fb;\n    this.auth = auth;\n    this.routeer = routeer;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onSignup() {\n    if (this.signupForm.valid) {\n      // send the object to database\n      this.auth.signUp(this.signupForm.value).subscribe({\n        next: res => {\n          alert(res.message);\n          this.signupForm.reset();\n        },\n        error: err => {\n          alert(err?.error.message);\n        }\n      });\n    } else {\n      //throw the error using toaster and with required fields\n      ValidateForm.validateAllFormFields(this.signupForm);\n      alert(\"your form is invalid\");\n    }\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","Validators","ValidateForm","SignupComponent","constructor","fb","auth","routeer","type","isText","eyeIcon","ngOnInit","signupForm","group","firstname","required","lastname","email","username","password","hideShowPass","onSignup","valid","signUp","value","subscribe","next","res","alert","message","reset","error","err","validateAllFormFields","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateForm';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon: string = \"fa-eye-slash\";\n  signupForm!: FormGroup;\n  constructor(private fb: FormBuilder, private auth: AuthService, private routeer: Route) {}\n\n  ngOnInit(): void {\n    this.signupForm = this.fb.group({\n      firstname: ['',Validators.required],\n      lastname: ['',Validators.required],\n      email: ['',Validators.required],\n      username: ['',Validators.required],\n      password: ['',Validators.required]\n    })\n  }\n\n  hideShowPass(){\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n  onSignup(){\n      if(this.signupForm.valid){\n      // send the object to database\n      this.auth.signUp(this.signupForm.value)\n        .subscribe({\n          next:(res)=>{\n            alert(res.message)\n            this.signupForm.reset();\n          },\n          error:(err)=>{\n            alert(err?.error.message)\n          }\n        });\n    }\n    else{\n      //throw the error using toaster and with required fields\n      ValidateForm.validateAllFormFields(this.signupForm);\n      alert(\"your form is invalid\")\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAA8CC,UAAU,QAAQ,gBAAgB;AAChF,OAAOC,YAAY,MAAM,8BAA8B;AAQhD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,EAAe,EAAUC,IAAiB,EAAUC,OAAc;IAAlE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAuB,KAAAC,OAAO,GAAPA,OAAO;IAJ/E,KAAAC,IAAI,GAAW,UAAU;IACzB,KAAAC,MAAM,GAAY,KAAK;IACvB,KAAAC,OAAO,GAAW,cAAc;EAEyD;EAEzFC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MAC9BC,SAAS,EAAE,CAAC,EAAE,EAACb,UAAU,CAACc,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAACf,UAAU,CAACc,QAAQ,CAAC;MAClCE,KAAK,EAAE,CAAC,EAAE,EAAChB,UAAU,CAACc,QAAQ,CAAC;MAC/BG,QAAQ,EAAE,CAAC,EAAE,EAACjB,UAAU,CAACc,QAAQ,CAAC;MAClCI,QAAQ,EAAE,CAAC,EAAE,EAAClB,UAAU,CAACc,QAAQ;KAClC,CAAC;EACJ;EAEAK,YAAYA,CAAA;IACV,IAAI,CAACX,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAACA,OAAO,GAAG,cAAc;IACrE,IAAI,CAACD,MAAM,GAAG,IAAI,CAACD,IAAI,GAAG,MAAM,GAAG,IAAI,CAACA,IAAI,GAAG,UAAU;EAC3D;EAEAa,QAAQA,CAAA;IACJ,IAAG,IAAI,CAACT,UAAU,CAACU,KAAK,EAAC;MACzB;MACA,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAC,IAAI,CAACX,UAAU,CAACY,KAAK,CAAC,CACpCC,SAAS,CAAC;QACTC,IAAI,EAAEC,GAAG,IAAG;UACVC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;UAClB,IAAI,CAACjB,UAAU,CAACkB,KAAK,EAAE;QACzB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG;UACXJ,KAAK,CAACI,GAAG,EAAED,KAAK,CAACF,OAAO,CAAC;QAC3B;OACD,CAAC;KACL,MACG;MACF;MACA3B,YAAY,CAAC+B,qBAAqB,CAAC,IAAI,CAACrB,UAAU,CAAC;MACnDgB,KAAK,CAAC,sBAAsB,CAAC;;EAEjC;CACD;AA3CYzB,eAAe,GAAA+B,UAAA,EAL3BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWlC,eAAe,CA2C3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}