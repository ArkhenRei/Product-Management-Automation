{"ast":null,"code":"var _class;\nimport { TokenApiModel } from '../models/token-api.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class TokenInterceptor {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  intercept(request, next) {\n    //get request\n    const myToken = this.auth.getToken();\n    //modify\n    if (myToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${myToken}`\n        } //\"Bearer \"+myToken\n      });\n    }\n    //send back\n    return next.handle(request);\n  }\n  handleUnAuthorizedError(req, next) {\n    let tokenApiModel = new TokenApiModel();\n  }\n}\n_class = TokenInterceptor;\n_class.ɵfac = function TokenInterceptor_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["TokenApiModel","TokenInterceptor","constructor","auth","intercept","request","next","myToken","getToken","clone","setHeaders","Authorization","handle","handleUnAuthorizedError","req","tokenApiModel","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\Interceptors\\token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { TokenApiModel } from '../models/token-api.model';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    //get request\n    const myToken = this.auth.getToken();\n\n    //modify\n    if(myToken){\n      request = request.clone({\n        setHeaders: {Authorization: `Bearer ${myToken}`} //\"Bearer \"+myToken\n      })\n    }\n\n    //send back\n    return next.handle(request);\n  }\n\n  handleUnAuthorizedError(req: HttpRequest<any>, next: HttpHandler){\n    let tokenApiModel = new TokenApiModel\n  }\n}\n"],"mappings":";AASA,SAASA,aAAa,QAAQ,2BAA2B;;;AAGzD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD;IACA,MAAMC,OAAO,GAAG,IAAI,CAACJ,IAAI,CAACK,QAAQ,EAAE;IAEpC;IACA,IAAGD,OAAO,EAAC;MACTF,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC;QACtBC,UAAU,EAAE;UAACC,aAAa,EAAE,UAAUJ,OAAO;QAAE,CAAC,CAAC;OAClD,CAAC;;IAGJ;IACA,OAAOD,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC;EAC7B;EAEAQ,uBAAuBA,CAACC,GAAqB,EAAER,IAAiB;IAC9D,IAAIS,aAAa,GAAG,IAAIf,aAAa,CAAb,CAAa;EACvC;;SArBWC,gBAAgB;;mBAAhBA,MAAgB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;SAAhBlB,MAAgB;EAAAmB,OAAA,EAAhBnB,MAAgB,CAAAoB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}