{"ast":null,"code":"//custom validator\nexport function ConfirmPasswordValidator(controlName, matchControlName) {\n  return formGroup => {\n    const passwordControl = formGroup.controls[controlName];\n    const confirmPasswordControl = formGroup.controls[matchControlName];\n    if (confirmPasswordControl.errors && confirmPasswordControl.errors['confirmPasswordValidator']) {\n      return;\n    }\n    if (passwordControl.value !== confirmPasswordControl.value) {\n      confirmPasswordControl.setErrors({\n        ConfirmPasswordValidator: true\n      });\n    } else {\n      confirmPasswordControl.setErrors(null);\n    }\n  };\n}","map":{"version":3,"names":["ConfirmPasswordValidator","controlName","matchControlName","formGroup","passwordControl","controls","confirmPasswordControl","errors","value","setErrors"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\helpers\\confirm-password.validator.ts"],"sourcesContent":["import { FormGroup } from \"@angular/forms\";\r\n\r\n//custom validator\r\nexport function ConfirmPasswordValidator(controlName: string, matchControlName: string){\r\n    return (formGroup:FormGroup) => {\r\n        const passwordControl = formGroup.controls[controlName];\r\n        const confirmPasswordControl = formGroup.controls[matchControlName];\r\n        if(confirmPasswordControl.errors && confirmPasswordControl.errors['confirmPasswordValidator']){\r\n            return;\r\n        }\r\n\r\n        if(passwordControl.value !== confirmPasswordControl.value){\r\n            confirmPasswordControl.setErrors({ConfirmPasswordValidator:true})\r\n        }else{\r\n            confirmPasswordControl.setErrors(null)\r\n        }\r\n    }\r\n}"],"mappings":"AAEA;AACA,OAAM,SAAUA,wBAAwBA,CAACC,WAAmB,EAAEC,gBAAwB;EAClF,OAAQC,SAAmB,IAAI;IAC3B,MAAMC,eAAe,GAAGD,SAAS,CAACE,QAAQ,CAACJ,WAAW,CAAC;IACvD,MAAMK,sBAAsB,GAAGH,SAAS,CAACE,QAAQ,CAACH,gBAAgB,CAAC;IACnE,IAAGI,sBAAsB,CAACC,MAAM,IAAID,sBAAsB,CAACC,MAAM,CAAC,0BAA0B,CAAC,EAAC;MAC1F;;IAGJ,IAAGH,eAAe,CAACI,KAAK,KAAKF,sBAAsB,CAACE,KAAK,EAAC;MACtDF,sBAAsB,CAACG,SAAS,CAAC;QAACT,wBAAwB,EAAC;MAAI,CAAC,CAAC;KACpE,MAAI;MACDM,sBAAsB,CAACG,SAAS,CAAC,IAAI,CAAC;;EAE9C,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}