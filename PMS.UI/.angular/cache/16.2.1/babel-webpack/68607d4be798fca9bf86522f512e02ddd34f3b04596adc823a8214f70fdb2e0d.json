{"ast":null,"code":"import _asyncToGenerator from \"D:/Desktop/MyProduct/Product/PMS.UI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WarehouseService {\n  constructor(http) {\n    this.http = http;\n    this.baseApiUrl = \"https://localhost:44348\";\n  }\n  getAllWarehouses() {\n    return this.http.get(this.baseApiUrl + '/api/Warehouse/get-all-warehouses');\n  }\n  addWarehouse(newWarehouse) {\n    newWarehouse.id = '0';\n    return this.http.post(this.baseApiUrl + '/api/Warehouse/add-warehouse', newWarehouse);\n  }\n  getWarehouse(id) {\n    return this.http.get(this.baseApiUrl + '/api/Warehouse/get-warehouse-by-id?id=' + id);\n  }\n  updateWarehouse(id, updateWarehouseRequest) {\n    return this.http.put(this.baseApiUrl + '/api/Warehouse/update-warehouse?id=' + id, updateWarehouseRequest);\n  }\n  deleteWarehouse(id) {\n    return this.http.delete(this.baseApiUrl + '/api/Warehouse?id=' + id);\n  }\n  getReports() {\n    return this.http.get(this.baseApiUrl + '/api/Warehouse/get-all-importexport');\n  }\n  addProductToWarehouse() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const response = yield _this.http.post(`/api/warehouse/remove-product/${warehouseId}/${productId}`, {\n        quantity\n      });\n    })();\n  }\n  removeProductFromWarehouse(warehouseId, productId, quantity) {\n    const body = {\n      quantity\n    };\n    return this.http.post(this.baseApiUrl + `/api/Warehouse/remove-product/${warehouseId}/${productId}`, body);\n  }\n}\n_class = WarehouseService;\n_class.ɵfac = function WarehouseService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["WarehouseService","constructor","http","baseApiUrl","getAllWarehouses","get","addWarehouse","newWarehouse","id","post","getWarehouse","updateWarehouse","updateWarehouseRequest","put","deleteWarehouse","delete","getReports","addProductToWarehouse","_this","_asyncToGenerator","response","warehouseId","productId","quantity","removeProductFromWarehouse","body","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\services\\warehouse.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Warehouse } from '../models/warehouse.model';\nimport { ProductWarehouse } from '../models/productWarehouse.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n  baseApiUrl: string=\"https://localhost:44348\"\n\nconstructor(private http: HttpClient) { }\n\ngetAllWarehouses(): Observable<Warehouse[]> {\n  return this.http.get<Warehouse[]>(this.baseApiUrl + '/api/Warehouse/get-all-warehouses');\n}\n\naddWarehouse(newWarehouse: Warehouse): Observable<Warehouse>{\n  newWarehouse.id = '0';\n  return this.http.post<Warehouse>(this.baseApiUrl + '/api/Warehouse/add-warehouse', newWarehouse);\n}\n\ngetWarehouse(id: string): Observable<Warehouse>{\n  return this.http.get<Warehouse>(this.baseApiUrl + '/api/Warehouse/get-warehouse-by-id?id=' + id);\n}\n\nupdateWarehouse(id: string, updateWarehouseRequest: Warehouse): Observable<Warehouse> {\n  return this.http.put<Warehouse>(this.baseApiUrl + '/api/Warehouse/update-warehouse?id='+id,updateWarehouseRequest);\n}\n\ndeleteWarehouse(id: string): Observable<Warehouse>{\n  return this.http.delete<Warehouse>(this.baseApiUrl + '/api/Warehouse?id='+id);\n}\n\ngetReports(): Observable<ProductWarehouse[]>{\n  return this.http.get<ProductWarehouse[]>(this.baseApiUrl + '/api/Warehouse/get-all-importexport');\n}\n\nasync addProductToWarehouse(): Promise<any> {\n  const response = await this.http.post(`/api/warehouse/remove-product/${warehouseId}/${productId}`, { quantity });\n}\n\nremoveProductFromWarehouse(warehouseId: number, productId: string, quantity: number): Observable<ProductWarehouse> {\n  const body = {quantity};\n  return this.http.post<ProductWarehouse>(this.baseApiUrl + `/api/Warehouse/remove-product/${warehouseId}/${productId}`, body);\n}\n}\n"],"mappings":";;;;AASA,OAAM,MAAOA,gBAAgB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFtB,KAAAC,UAAU,GAAS,yBAAyB;EAEN;EAExCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,UAAU,GAAG,mCAAmC,CAAC;EAC1F;EAEAG,YAAYA,CAACC,YAAuB;IAClCA,YAAY,CAACC,EAAE,GAAG,GAAG;IACrB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAY,IAAI,CAACN,UAAU,GAAG,8BAA8B,EAAEI,YAAY,CAAC;EAClG;EAEAG,YAAYA,CAACF,EAAU;IACrB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,UAAU,GAAG,wCAAwC,GAAGK,EAAE,CAAC;EAClG;EAEAG,eAAeA,CAACH,EAAU,EAAEI,sBAAiC;IAC3D,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAY,IAAI,CAACV,UAAU,GAAG,qCAAqC,GAACK,EAAE,EAACI,sBAAsB,CAAC;EACpH;EAEAE,eAAeA,CAACN,EAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAY,IAAI,CAACZ,UAAU,GAAG,oBAAoB,GAACK,EAAE,CAAC;EAC/E;EAEAQ,UAAUA,CAAA;IACR,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAqB,IAAI,CAACF,UAAU,GAAG,qCAAqC,CAAC;EACnG;EAEMc,qBAAqBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACzB,MAAMC,QAAQ,SAASF,KAAI,CAAChB,IAAI,CAACO,IAAI,CAAC,iCAAiCY,WAAW,IAAIC,SAAS,EAAE,EAAE;QAAEC;MAAQ,CAAE,CAAC;IAAC;EACnH;EAEAC,0BAA0BA,CAACH,WAAmB,EAAEC,SAAiB,EAAEC,QAAgB;IACjF,MAAME,IAAI,GAAG;MAACF;IAAQ,CAAC;IACvB,OAAO,IAAI,CAACrB,IAAI,CAACO,IAAI,CAAmB,IAAI,CAACN,UAAU,GAAG,iCAAiCkB,WAAW,IAAIC,SAAS,EAAE,EAAEG,IAAI,CAAC;EAC9H;;SArCazB,gBAAgB;;mBAAhBA,MAAgB,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhB7B,MAAgB;EAAA8B,OAAA,EAAhB9B,MAAgB,CAAA+B,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}