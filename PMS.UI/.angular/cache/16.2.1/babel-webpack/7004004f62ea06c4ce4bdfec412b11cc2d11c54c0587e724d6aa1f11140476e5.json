{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { ResetPassword } from 'src/app/models/reset-password.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction ResetPasswordComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"*First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"*Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ResetPasswordComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.resetPasswordObj = new ResetPassword();\n  }\n  ngOnInit() {\n    this.resetPasswordForm = this.fb.group({\n      password: [null, Validators.required],\n      confirmPassword: [null, Validators.required]\n    });\n  }\n}\n_class = ResetPasswordComponent;\n_class.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-reset-password\"]],\n  decls: 22,\n  vars: 7,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"firstname\", \"type\", \"text\", \"placeholder\", \"First Name\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"lastname\", \"type\", \"text\", \"placeholder\", \"Last Name\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-danger\"]],\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, ResetPasswordComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 11)(18, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, ResetPasswordComponent_small_19_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_20_listener() {\n        return ctx.onSignup();\n      });\n      i0.ɵɵtext(21, \"Reset Password\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.resetPasswordForm.controls[\"firstname\"].dirty && ctx.resetPasswordForm.hasError(\"required\", \"firstname\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.controls[\"firstname\"].dirty && ctx.resetPasswordForm.hasError(\"required\", \"firstname\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.resetPasswordForm.controls[\"lastname\"].dirty && ctx.resetPasswordForm.hasError(\"required\", \"lastname\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.controls[\"lastname\"].dirty && ctx.resetPasswordForm.hasError(\"required\", \"lastname\"));\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","ResetPassword","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ResetPasswordComponent","constructor","fb","resetPasswordObj","ngOnInit","resetPasswordForm","group","password","required","confirmPassword","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","ResetPasswordComponent_small_14_Template","ResetPasswordComponent_small_19_Template","ɵɵlistener","ResetPasswordComponent_Template_button_click_20_listener","onSignup","ɵɵadvance","ɵɵproperty","ɵɵclassProp","controls","dirty","hasError"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\reset-password\\reset-password.component.ts","D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\reset-password\\reset-password.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { ResetPassword } from 'src/app/models/reset-password.model';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\nexport class ResetPasswordComponent implements OnInit {\n\n  resetPasswordForm!: FormGroup;\n  emailToReset!: string;\n  emailToken!: string;\n  resetPasswordObj = new ResetPassword();\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.resetPasswordForm = this.fb.group({\n      password: [null, Validators.required],\n      confirmPassword: [null, Validators.required]\n    })\n  }\n\n}\n","<div class=\"outer\">\n  <div class=\"container\">\n      <div class=\"row\">\n          <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n              <div class=\"panel border bg-white\">\n                  <div class=\"panel-heading\">\n                      <h3 class=\"pt-3 font-weight-bold\">Sign Up</h3>\n                  </div>\n                  <div class=\"panel-body p-3\">\n                      <form [formGroup]=\"resetPasswordForm\">\n                          <div class=\"form-group pt-3\">\n                              <div class=\"input-field\" [class.error]=\"resetPasswordForm.controls['firstname'].dirty && resetPasswordForm.hasError('required','firstname')\">\n                                  <span class=\"fa fa-user p-2\"></span>\n                                  <input formControlName=\"firstname\" type=\"text\" placeholder=\"First Name\">\n                              </div>\n                          </div>\n                          <small *ngIf=\"resetPasswordForm.controls['firstname'].dirty && resetPasswordForm.hasError('required','firstname')\" class=\"text-danger\">*First Name is required</small>\n                          <div class=\"form-group pt-3\">\n                              <div class=\"input-field\" [class.error]=\"resetPasswordForm.controls['lastname'].dirty && resetPasswordForm.hasError('required','lastname')\">\n                                  <span class=\"fa fa-user p-2\"></span>\n                                  <input formControlName=\"lastname\" type=\"text\" placeholder=\"Last Name\">\n                              </div>\n                          </div>\n                          <small *ngIf=\"resetPasswordForm.controls['lastname'].dirty && resetPasswordForm.hasError('required','lastname')\" class=\"text-danger\">*Last Name is required</small>\n                  \n                          <button (click)=\"onSignup()\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Reset Password</button>\n                      </form>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>"],"mappings":";AACA,SAAiCA,UAAU,QAAyC,gBAAgB;AACpG,SAASC,aAAa,QAAQ,qCAAqC;;;;;ICczCC,EAAA,CAAAC,cAAA,gBAAuI;IAAAD,EAAA,CAAAE,MAAA,8BAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAOtKH,EAAA,CAAAC,cAAA,gBAAqI;IAAAD,EAAA,CAAAE,MAAA,6BAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;ADb7L,OAAM,MAAOC,sBAAsB;EAOjCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAFtB,KAAAC,gBAAgB,GAAG,IAAIR,aAAa,EAAE;EAEC;EAEvCS,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MACrCC,QAAQ,EAAE,CAAC,IAAI,EAAEb,UAAU,CAACc,QAAQ,CAAC;MACrCC,eAAe,EAAE,CAAC,IAAI,EAAEf,UAAU,CAACc,QAAQ;KAC5C,CAAC;EACJ;;SAdWR,sBAAsB;;mBAAtBA,MAAsB,EAAAJ,EAAA,CAAAc,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAtBZ,MAAsB;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVnCvB,EAAA,CAAAC,cAAA,aAAmB;MAMqCD,EAAA,CAAAE,MAAA,cAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAElDH,EAAA,CAAAC,cAAA,aAA4B;MAIZD,EAAA,CAAAyB,SAAA,gBAAoC;MAExCzB,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAA0B,UAAA,KAAAC,wCAAA,oBAAsK;MACtK3B,EAAA,CAAAC,cAAA,cAA6B;MAErBD,EAAA,CAAAyB,SAAA,gBAAoC;MAExCzB,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAA0B,UAAA,KAAAE,wCAAA,oBAAmK;MAEnK5B,EAAA,CAAAC,cAAA,kBAAwF;MAAhFD,EAAA,CAAA6B,UAAA,mBAAAC,yDAAA;QAAA,OAASN,GAAA,CAAAO,QAAA,EAAU;MAAA,EAAC;MAA4D/B,EAAA,CAAAE,MAAA,sBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAhB7GH,EAAA,CAAAgC,SAAA,GAA+B;MAA/BhC,EAAA,CAAAiC,UAAA,cAAAT,GAAA,CAAAf,iBAAA,CAA+B;MAEJT,EAAA,CAAAgC,SAAA,GAAmH;MAAnHhC,EAAA,CAAAkC,WAAA,UAAAV,GAAA,CAAAf,iBAAA,CAAA0B,QAAA,cAAAC,KAAA,IAAAZ,GAAA,CAAAf,iBAAA,CAAA4B,QAAA,0BAAmH;MAKxIrC,EAAA,CAAAgC,SAAA,GAAyG;MAAzGhC,EAAA,CAAAiC,UAAA,SAAAT,GAAA,CAAAf,iBAAA,CAAA0B,QAAA,cAAAC,KAAA,IAAAZ,GAAA,CAAAf,iBAAA,CAAA4B,QAAA,0BAAyG;MAEpFrC,EAAA,CAAAgC,SAAA,GAAiH;MAAjHhC,EAAA,CAAAkC,WAAA,UAAAV,GAAA,CAAAf,iBAAA,CAAA0B,QAAA,aAAAC,KAAA,IAAAZ,GAAA,CAAAf,iBAAA,CAAA4B,QAAA,yBAAiH;MAKtIrC,EAAA,CAAAgC,SAAA,GAAuG;MAAvGhC,EAAA,CAAAiC,UAAA,SAAAT,GAAA,CAAAf,iBAAA,CAAA0B,QAAA,aAAAC,KAAA,IAAAZ,GAAA,CAAAf,iBAAA,CAAA4B,QAAA,yBAAuG"},"metadata":{},"sourceType":"module","externalDependencies":[]}