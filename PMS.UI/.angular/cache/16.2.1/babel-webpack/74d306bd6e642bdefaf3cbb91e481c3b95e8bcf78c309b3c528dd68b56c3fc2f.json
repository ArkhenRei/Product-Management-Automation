{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nfunction ResetPasswordComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ResetPasswordComponent {\n  constructor() {}\n  ngOnInit() {}\n}\n_class = ResetPasswordComponent;\n_class.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-reset-password\"]],\n  decls: 30,\n  vars: 11,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forget\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signup\"], [1, \"text-danger\"]],\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, ResetPasswordComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 14)(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"span\", 16);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_19_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, ResetPasswordComponent_small_20_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(21, \"div\", 17)(22, \"a\", 18);\n      i0.ɵɵtext(23, \"Forget Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_24_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(25, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵtext(27, \"Don't have account? \");\n      i0.ɵɵelementStart(28, \"a\", 21);\n      i0.ɵɵtext(29, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ResetPasswordComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","ResetPasswordComponent_small_14_Template","ɵɵlistener","ResetPasswordComponent_Template_span_click_19_listener","hideShowPass","ResetPasswordComponent_small_20_Template","ResetPasswordComponent_Template_button_click_24_listener","onLogin","ɵɵadvance","ɵɵproperty","loginForm","ɵɵclassProp","controls","dirty","hasError","type","ɵɵclassMapInterpolate1","eyeIcon"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\reset-password\\reset-password.component.ts","D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\reset-password\\reset-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"outer\">\n  <div class=\"container\">\n      <div class=\"row\">\n          <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n              <div class=\"panel border bg-white\">\n                  <div class=\"panel-heading\">\n                      <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                  </div>\n                  <div class=\"panel-body p-3\">\n                      <form [formGroup]=\"loginForm\">\n                          <div class=\"form-group pt-3\">\n                              <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                  <span class=\"fa fa-user p-2\"></span>\n                                  <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                              </div>\n                          </div>\n                          <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required</small>\n                          <div class=\"form-group pt-3\">\n                              <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                  <span class=\"fa fa-lock p-2\"></span>\n                                  <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                  <span (click)=\"hideShowPass()\" class=\"fa {{eyeIcon}}\"></span>\n                              </div>\n                          </div>\n                          <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required</small>\n                          <div class=\"form-inline fr mt-4\">\n                              <a id=\"forget\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"font-weight-bold\">Forget Password?</a>\n                          </div>\n                          <button (click)=\"onLogin()\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\n                          <div class=\"text-center pt-4 text-muted\">Don't have account? <a id=\"forget\" routerLink=\"/signup\">Sign Up</a></div>\n                      </form>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}