{"ast":null,"code":"var _class;\nimport { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class SignupComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {}\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // send the object to database\n    } else {\n      //throw the error using toaster and with required fields\n      this.validateAllFormFields(this.loginForm);\n      alert(\"your form is invalid\");\n    }\n  }\n  validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}\n_class = SignupComponent;\n_class.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-signup\"]],\n  decls: 37,\n  vars: 4,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"type\", \"text\", \"placeholder\", \"FirsName\"], [\"type\", \"text\", \"placeholder\", \"LastName\"], [\"type\", \"text\", \"placeholder\", \"Email\"], [\"type\", \"text\", \"placeholder\", \"Username\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/login\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\")(10, \"div\", 8)(11, \"div\", 9);\n      i0.ɵɵelement(12, \"span\", 10)(13, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 9);\n      i0.ɵɵelement(16, \"span\", 10)(17, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 9);\n      i0.ɵɵelement(20, \"span\", 10)(21, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 8)(23, \"div\", 9);\n      i0.ɵɵelement(24, \"span\", 10)(25, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\", 9);\n      i0.ɵɵelement(28, \"span\", 15)(29, \"input\", 16);\n      i0.ɵɵelementStart(30, \"span\", 17);\n      i0.ɵɵlistener(\"click\", function SignupComponent_Template_span_click_30_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"button\", 18);\n      i0.ɵɵtext(32, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 19);\n      i0.ɵɵtext(34, \"Already have account? \");\n      i0.ɵɵelementStart(35, \"a\", 20);\n      i0.ɵɵtext(36, \"Login\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n    }\n  },\n  dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","SignupComponent","constructor","fb","type","isText","eyeIcon","ngOnInit","hideShowPass","onSubmit","loginForm","valid","validateAllFormFields","alert","formGroup","Object","keys","controls","forEach","field","control","get","FormControl","markAsDirty","onlySelf","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SignupComponent_Template_span_click_30_listener","ɵɵadvance","ɵɵproperty","ɵɵclassMapInterpolate1"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\signup\\signup.component.ts","D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\signup\\signup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon: string = \"fa-eye-slash\";\n  signupForm: FormGroup;\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  hideShowPass(){\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n  onSubmit(){\n    if(this.loginForm.valid){\n\n      // send the object to database\n    }\n    else{\n      //throw the error using toaster and with required fields\n      this.validateAllFormFields(this.loginForm);\n      alert(\"your form is invalid\")\n    }\n  }\n\n  private validateAllFormFields(formGroup:FormGroup){\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if(control instanceof FormControl){\n        control.markAsDirty({onlySelf : true});\n      }\n      else if(control instanceof FormGroup){\n        this.validateAllFormFields(control)\n      }\n    })\n}\n","<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Sign Up</h3>\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input type=\"text\" placeholder=\"FirsName\">\n                                </div>\n                            </div>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input type=\"text\" placeholder=\"LastName\">\n                                </div>\n                            </div>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input type=\"text\" placeholder=\"Email\">\n                                </div>\n                            </div>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input type=\"text\" placeholder=\"Username\">\n                                </div>\n                            </div>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input [type]=\"type\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa {{eyeIcon}}\"></span>\n                                </div>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Sign Up</button>\n                            <div class=\"text-center pt-4 text-muted\">Already have account? <a id=\"forget\" routerLink=\"/login\">Login</a></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}