{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateForm';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction LoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, auth) {\n    this.fb = fb;\n    this.auth = auth;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      // send the object to database\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          alert(res.message);\n          this.loginForm.reset();\n        },\n        error: err => {\n          alert(err?.error.message);\n        }\n      });\n    } else {\n      //throw the error using toaster and with required fields\n      ValidateForm.validateAllFormFields(this.loginForm);\n      alert(\"your form is invalid\");\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 30,\n  vars: 11,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forget\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signup\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, LoginComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 14)(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"span\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_19_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, LoginComponent_small_20_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(21, \"div\", 17)(22, \"a\", 18);\n      i0.ɵɵtext(23, \"Forget Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(25, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵtext(27, \"Don't have account? \");\n      i0.ɵɵelementStart(28, \"a\", 21);\n      i0.ɵɵtext(29, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","ValidateForm","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","auth","type","isText","eyeIcon","ngOnInit","loginForm","group","username","required","password","hideShowPass","onLogin","valid","login","value","subscribe","next","res","alert","message","reset","error","err","validateAllFormFields","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_small_14_Template","ɵɵlistener","LoginComponent_Template_span_click_19_listener","LoginComponent_small_20_Template","LoginComponent_Template_button_click_24_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","controls","dirty","hasError","ɵɵclassMapInterpolate1"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\login\\login.component.ts","D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateForm';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon: string = \"fa-eye-slash\";\n  loginForm!: FormGroup;\n  constructor(private fb: FormBuilder, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['',Validators.required],\n      password: ['',Validators.required]\n    })\n  }\n\n  hideShowPass(){\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n  onLogin(){\n      if(this.loginForm.valid){\n      // send the object to database\n      this.auth.login(this.loginForm.value)\n        .subscribe({\n          next:(res) => {\n            alert(res.message)\n            this.loginForm.reset();\n          },\n          error:(err) => {\n            alert(err?.error.message)\n            \n          }\n        });\n        \n    }\n    else{\n      //throw the error using toaster and with required fields\n      ValidateForm.validateAllFormFields(this.loginForm);\n      alert(\"your form is invalid\")\n    }\n  }\n  \n}\n\n\n","<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form [formGroup]=\"loginForm\">\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required</small>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa {{eyeIcon}}\"></span>\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required</small>\n                            <div class=\"form-inline fr mt-4\">\n                                <a id=\"forget\" class=\"font-weight-bold\">Forget Password?</a>\n                            </div>\n                            <button (click)=\"onLogin()\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\n                            <div class=\"text-center pt-4 text-muted\">Don't have account? <a id=\"forget\" routerLink=\"/signup\">Sign Up</a></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}