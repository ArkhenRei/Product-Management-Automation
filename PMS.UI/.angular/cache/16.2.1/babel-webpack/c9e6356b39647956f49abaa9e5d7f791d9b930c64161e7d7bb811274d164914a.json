{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule, NgIf } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ConfirmPasswordValidator } from 'src/app/helpers/confirm-password.validator';\nimport ValidateForm from 'src/app/helpers/validateForm';\nimport { ResetPassword } from 'src/app/models/reset-password.model';\nexport let ResetPasswordComponent = class ResetPasswordComponent {\n  constructor(fb, activatedRoute, resetService, toast) {\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.resetService = resetService;\n    this.toast = toast;\n    this.resetPasswordObj = new ResetPassword();\n  }\n  ngOnInit() {\n    this.resetPasswordForm = this.fb.group({\n      password: [null, Validators.required],\n      confirmPassword: [null, Validators.required]\n    }, {\n      validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n    });\n    this.activatedRoute.queryParams.subscribe(val => {\n      this.emailToReset = val['email'];\n      let urlToken = val['code'];\n      this.emailToken = urlToken.replace(/ /g, '+');\n      console.log(this.emailToken);\n      console.log(this.emailToReset);\n    });\n  }\n  reset() {\n    if (this.resetPasswordForm.valid) {\n      this.resetPasswordObj.email = this.emailToReset;\n      this.resetPasswordObj.newPassword = this.resetPasswordForm.value.password;\n      this.resetPasswordObj.confirmPassword = this.resetPasswordForm.value.confirmPassword;\n      this.resetPasswordObj.emailToken = this.emailToken;\n      this.resetService.resetPassword(this.resetPasswordObj).subscribe({\n        next: res => {},\n        error: err => {}\n      });\n    } else {\n      ValidateForm.validateAllFormFields(this.resetPasswordForm);\n    }\n  }\n};\nResetPasswordComponent = __decorate([Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule, FormsModule, NgIf, CommonModule]\n})], ResetPasswordComponent);","map":{"version":3,"names":["CommonModule","NgIf","Component","Validators","ReactiveFormsModule","FormsModule","ConfirmPasswordValidator","ValidateForm","ResetPassword","ResetPasswordComponent","constructor","fb","activatedRoute","resetService","toast","resetPasswordObj","ngOnInit","resetPasswordForm","group","password","required","confirmPassword","validator","queryParams","subscribe","val","emailToReset","urlToken","emailToken","replace","console","log","reset","valid","email","newPassword","value","resetPassword","next","res","error","err","validateAllFormFields","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["D:\\Desktop\\MyProduct\\Product\\PMS.UI\\src\\app\\components\\reset-password\\reset-password.component.ts"],"sourcesContent":["import { CommonModule, NgIf } from '@angular/common';\nimport { Component, NgModule, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from 'src/app/helpers/confirm-password.validator';\nimport ValidateForm from 'src/app/helpers/validateForm';\nimport { ResetPassword } from 'src/app/models/reset-password.model';\nimport { ResetPasswordService } from 'src/app/services/reset-password.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule, FormsModule, NgIf, CommonModule]\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  resetPasswordForm!: FormGroup;\n  emailToReset!: string;\n  emailToken!: string;\n  resetPasswordObj = new ResetPassword();\n\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private resetService: ResetPasswordService, private toast: NG) { }\n\n  ngOnInit(): void {\n    this.resetPasswordForm = this.fb.group({\n      password: [null, Validators.required],\n      confirmPassword: [null, Validators.required]\n    },{\n      validator: ConfirmPasswordValidator(\"password\",\"confirmPassword\")\n    });\n\n    this.activatedRoute.queryParams.subscribe(val=>{\n      this.emailToReset = val['email'];\n      let urlToken = val['code'];\n      this.emailToken = urlToken.replace(/ /g,'+');\n      console.log(this.emailToken);\n      console.log(this.emailToReset);\n    })\n  }\n\n  reset(){\n    if(this.resetPasswordForm.valid){\n      this.resetPasswordObj.email = this.emailToReset;\n      this.resetPasswordObj.newPassword = this.resetPasswordForm.value.password;\n      this.resetPasswordObj.confirmPassword = this.resetPasswordForm.value.confirmPassword;\n      this.resetPasswordObj.emailToken = this.emailToken;\n\n      this.resetService.resetPassword(this.resetPasswordObj)\n      .subscribe({\n        next:(res)=>{\n\n        },\n        error:(err)=>{\n\n        }\n      })\n    }else{\n      ValidateForm.validateAllFormFields(this.resetPasswordForm);\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,IAAI,QAAQ,iBAAiB;AACpD,SAASC,SAAS,QAA0B,eAAe;AAC3D,SAAiCC,UAAU,EAAEC,mBAAmB,EAAEC,WAAW,QAAO,gBAAgB;AAEpG,SAASC,wBAAwB,QAAQ,4CAA4C;AACrF,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,aAAa,QAAQ,qCAAqC;AAU5D,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAOjCC,YAAoBC,EAAe,EAAUC,cAA8B,EAAUC,YAAkC,EAAUC,KAAS;IAAtH,KAAAH,EAAE,GAAFA,EAAE;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAA0B,KAAAC,YAAY,GAAZA,YAAY;IAAgC,KAAAC,KAAK,GAALA,KAAK;IAFtI,KAAAC,gBAAgB,GAAG,IAAIP,aAAa,EAAE;EAEwG;EAE9IQ,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MACrCC,QAAQ,EAAE,CAAC,IAAI,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;MACrCC,eAAe,EAAE,CAAC,IAAI,EAAElB,UAAU,CAACiB,QAAQ;KAC5C,EAAC;MACAE,SAAS,EAAEhB,wBAAwB,CAAC,UAAU,EAAC,iBAAiB;KACjE,CAAC;IAEF,IAAI,CAACM,cAAc,CAACW,WAAW,CAACC,SAAS,CAACC,GAAG,IAAE;MAC7C,IAAI,CAACC,YAAY,GAAGD,GAAG,CAAC,OAAO,CAAC;MAChC,IAAIE,QAAQ,GAAGF,GAAG,CAAC,MAAM,CAAC;MAC1B,IAAI,CAACG,UAAU,GAAGD,QAAQ,CAACE,OAAO,CAAC,IAAI,EAAC,GAAG,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,UAAU,CAAC;MAC5BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,YAAY,CAAC;IAChC,CAAC,CAAC;EACJ;EAEAM,KAAKA,CAAA;IACH,IAAG,IAAI,CAACf,iBAAiB,CAACgB,KAAK,EAAC;MAC9B,IAAI,CAAClB,gBAAgB,CAACmB,KAAK,GAAG,IAAI,CAACR,YAAY;MAC/C,IAAI,CAACX,gBAAgB,CAACoB,WAAW,GAAG,IAAI,CAAClB,iBAAiB,CAACmB,KAAK,CAACjB,QAAQ;MACzE,IAAI,CAACJ,gBAAgB,CAACM,eAAe,GAAG,IAAI,CAACJ,iBAAiB,CAACmB,KAAK,CAACf,eAAe;MACpF,IAAI,CAACN,gBAAgB,CAACa,UAAU,GAAG,IAAI,CAACA,UAAU;MAElD,IAAI,CAACf,YAAY,CAACwB,aAAa,CAAC,IAAI,CAACtB,gBAAgB,CAAC,CACrDS,SAAS,CAAC;QACTc,IAAI,EAAEC,GAAG,IAAG,CAEZ,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG,CAEb;OACD,CAAC;KACH,MAAI;MACHlC,YAAY,CAACmC,qBAAqB,CAAC,IAAI,CAACzB,iBAAiB,CAAC;;EAE9D;CAED;AA/CYR,sBAAsB,GAAAkC,UAAA,EAPlCzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC,CAAC;EAC7CC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC5C,mBAAmB,EAAEC,WAAW,EAAEJ,IAAI,EAAED,YAAY;CAC/D,CAAC,C,EACWS,sBAAsB,CA+ClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}